"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[437],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,c=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=s(n),f=i,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||c;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var c=n.length,o=new Array(c);o[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var s=2;s<c;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2496:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return d}});var r=n(7462),i=n(3366),c=(n(7294),n(3905)),o=["components"],a={title:"Dict",sidebar_label:"Dict"},l=void 0,s={unversionedId:"dict",id:"dict",title:"Dict",description:"Dict.entries(dict)",source:"@site/docs/dict.md",sourceDirName:".",slug:"/dict",permalink:"/boxed/dict",editUrl:"https://github.com/swan-io/boxed/edit/main/docs/docs/dict.md",tags:[],version:"current",frontMatter:{title:"Dict",sidebar_label:"Dict"},sidebar:"docs",previous:{title:"Array",permalink:"/boxed/array"},next:{title:"Lazy",permalink:"/boxed/lazy"}},u={},d=[{value:"Dict.entries(dict)",id:"dictentriesdict",level:2},{value:"Dict.keys(dict)",id:"dictkeysdict",level:2},{value:"Dict.values(dict)",id:"dictvaluesdict",level:2}],p={toc:d};function f(e){var t=e.components,n=(0,i.Z)(e,o);return(0,c.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},'import { Dict } from "@swan-io/boxed";\n')),(0,c.kt)("h2",{id:"dictentriesdict"},"Dict.entries(dict)"),(0,c.kt)("p",null,"Returns the entries in the dict."),(0,c.kt)("p",null,"Contrary to the TS bindings for ",(0,c.kt)("inlineCode",{parentName:"p"},"Object.entries"),", the types are refined."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},'const index = Dict.entries({ foo: 1 }); // [["foo", 1]];\n')),(0,c.kt)("h2",{id:"dictkeysdict"},"Dict.keys(dict)"),(0,c.kt)("p",null,"Returns the keys in the dict."),(0,c.kt)("p",null,"Contrary to the TS bindings for ",(0,c.kt)("inlineCode",{parentName:"p"},"Object.keys"),", the types are refined."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},'const index = Dict.keys({ foo: 1 }); // ["foo"];\n')),(0,c.kt)("h2",{id:"dictvaluesdict"},"Dict.values(dict)"),(0,c.kt)("p",null,"Returns the values in the dict."),(0,c.kt)("p",null,"Contrary to the TS bindings for ",(0,c.kt)("inlineCode",{parentName:"p"},"Object.values"),", the types are refined."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"const index = Dict.values({ foo: 1 }); // [1];\n")))}f.isMDXComponent=!0}}]);